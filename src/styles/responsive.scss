/* Mixin */
/* Set các giá trị với màn hình tương ứng */

$breakpoints: (
  mobile: '(max-width: 500px)',
  tablet: '(max-width: 768px) and (min-width: 500px)',
  small: '(max-width: 991px) and (min-width: 768px)',
  medium:'(max-width: 1024px) and (min-width: 991px)',
  desktop: '(min-width: 1024px)',
  extra-large: '(min-width: 1300px)',
);

@mixin mediaMinMax($minBreakpoint, $maxBreakpoint) {
  @media (min-width: $minBreakpoint) and (max-width: $maxBreakpoint) {
    @content;
  }
}

@mixin mediaCustom($minBreakpoint, $maxBreakpoint) {
  @if $minBreakpoint == 0 {
    @media only screen and (max-width: $maxBreakpoint) {
      @content;
    }
  }
  @if else $maxBreakpoint == 0 {
    @media only screen and (min-width: $minBreakpoint) {
      @content;
    }
  }
  @if else $minBreakpoint != 0 and  $maxBreakpoint != 0  {
    @media (min-width: $minBreakpoint) and (max-width: $maxBreakpoint) {
      @content;
    }
  }
}

@mixin mobile {
  @media #{map-get($breakpoints, "mobile")} {
    @content;
  }
}

@mixin tablet {
  @media #{map-get($breakpoints, "tablet")} {
    @content;
  }
}

@mixin small {
  @media #{map-get($breakpoints, "small")} {
    @content;
  }
}

@mixin medium {
  @media #{map-get($breakpoints, "medium")} {
    @content;
  }
}

@mixin desktop {
  @media #{map-get($breakpoints, "desktop")} {
    @content;
  }
}

@mixin super-desktop {
  @media #{map-get($breakpoints, "extra-large")} {
    @content;
  }
}

@mixin multipleMedia($min: false, $keys...) {
  @each $key in $keys {
    @if $min == true {
      @media only screen and (min-width: map-get($breakpoints, $key)) {
        @content;
      }
    } @else {
      @media only screen and (max-width: map-get($breakpoints, $key)) {
        @content;
      }
    }
  }
}
